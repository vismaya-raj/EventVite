{"ast":null,"code":"var _jsxFileName = \"/home/vismaya/EventVite/eventvite-frontend/src/Components/EventInvitation.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { Box, Grid, Stack, TextField, MenuItem, Container, Typography, Dialog, DialogTitle, DialogContent, DialogActions, Button as MuiButton, Card, CardContent, Autocomplete } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\n// Event type options and background mappings\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst eventTypeOptions = [{\n  value: \"Birthday\"\n}, {\n  value: \"Wedding\"\n}, {\n  value: \"House Warming\"\n}, {\n  value: \"Baby Shower\"\n}];\nconst eventBackgrounds = {\n  Birthday: \"https://images.greetingsisland.com/images/envelopes/preview/p-envelope81-b.png\",\n  Wedding: \"https://www.pngmart.com/files/6/Hand-drawn-Wedding-Invitation-Background-PNG.png\",\n  \"House Warming\": \"https://img.freepik.com/free-vector/housewarming-celebration-card-template_23-2148955947.jpg\",\n  \"Baby Shower\": \"https://img.freepik.com/free-vector/flat-baby-shower-background_23-2148947601.jpg\"\n};\nexport default function EventInvitation({\n  selectedEventType,\n  setSelectedEventType\n}) {\n  _s();\n  const [eventData, setEventData] = useState({\n    guestName: \"\",\n    guestEmail: \"\",\n    phone: \"\",\n    eventType: selectedEventType || \"\",\n    // Initialize with the selectedEventType prop\n    eventDate: \"\",\n    time: \"\",\n    description: \"\"\n  });\n  const [guestList, setGuestList] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n\n  // Sync eventType with prop selectedEventType whenever it changes\n  useEffect(() => {\n    if (selectedEventType) {\n      setEventData(prev => ({\n        ...prev,\n        eventType: selectedEventType\n      }));\n    }\n  }, [selectedEventType]);\n\n  // Fetch guests for Autocomplete\n  useEffect(() => {\n    const fetchGuests = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/api/guests\");\n        const data = await res.json();\n        setGuestList(data);\n      } catch (err) {\n        console.error(\"Failed to fetch guests:\", err);\n      }\n    };\n    fetchGuests();\n  }, []);\n\n  // Handle input changes\n  const handleChange = e => {\n    setEventData({\n      ...eventData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle generating the invitation and saving details\n  const handleGenerate = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/guests\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: eventData.guestName,\n          email: eventData.guestEmail,\n          phone: eventData.phone,\n          eventType: eventData.eventType,\n          eventDate: eventData.eventDate,\n          time: eventData.time,\n          description: eventData.description\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        alert(\"Backend error: \" + data.error || \"Unknown error\");\n        return;\n      }\n      setOpenDialog(true);\n    } catch (err) {\n      console.error(\"Error during fetch:\", err);\n      alert(\"Failed to save guest details\");\n    }\n  };\n\n  // Handle closing the dialog\n  const handleClose = () => setOpenDialog(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      textAlign: \"center\",\n      mb: 4,\n      children: \"Event Invitation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Guest Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            freeSolo: true,\n            options: guestList,\n            getOptionLabel: option => typeof option === \"string\" ? option : option.name,\n            value: eventData.guestName,\n            onChange: (e, newValue) => {\n              if (typeof newValue === \"string\") {\n                setEventData({\n                  ...eventData,\n                  guestName: newValue,\n                  guestEmail: \"\",\n                  phone: \"\"\n                });\n              } else if (newValue) {\n                setEventData({\n                  ...eventData,\n                  guestName: newValue.name,\n                  guestEmail: newValue.email,\n                  phone: newValue.phone\n                });\n              } else {\n                setEventData({\n                  ...eventData,\n                  guestName: \"\",\n                  guestEmail: \"\",\n                  phone: \"\"\n                });\n              }\n            },\n            onInputChange: (event, newInputValue) => {\n              setEventData(prev => ({\n                ...prev,\n                guestName: newInputValue\n              }));\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"Guest Name\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Guest Email\",\n            name: \"guestEmail\",\n            value: eventData.guestEmail,\n            onChange: handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Phone\",\n            name: \"phone\",\n            value: eventData.phone,\n            onChange: handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Event Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            label: \"Event Type\",\n            name: \"eventType\",\n            value: eventData.eventType,\n            onChange: e => {\n              setEventData({\n                ...eventData,\n                eventType: e.target.value\n              });\n              setSelectedEventType(e.target.value); // Update the selected event type on change\n            },\n\n            fullWidth: true,\n            children: eventTypeOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.value\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Event Date\",\n            name: \"eventDate\",\n            type: \"date\",\n            InputLabelProps: {\n              shrink: true\n            },\n            value: eventData.eventDate,\n            onChange: handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Time\",\n            name: \"time\",\n            value: eventData.time,\n            onChange: handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Event Description\",\n            name: \"description\",\n            multiline: true,\n            rows: 5,\n            value: eventData.description,\n            onChange: handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(MuiButton, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleGenerate,\n          children: \"Generate Invitation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Invitation Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            minWidth: 300,\n            backgroundImage: `url('${eventBackgrounds[eventData.eventType]}')`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            borderRadius: 5,\n            boxShadow: 10,\n            padding: 4,\n            textAlign: \"center\",\n            color: \"#fff\",\n            backdropFilter: \"blur(3px)\",\n            opacity: 0.95\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              position: \"relative\",\n              zIndex: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              sx: {\n                fontWeight: 700,\n                mb: 2,\n                color: \"#800080\"\n              },\n              children: [eventData.eventType, \" Invitation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              sx: {\n                fontStyle: \"italic\",\n                mb: 2,\n                color: \"black\"\n              },\n              children: [\"You're invited, \", eventData.guestName, \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: 500,\n                mb: 1,\n                color: \"black\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), \" \", eventData.eventDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: 500,\n                mb: 1,\n                color: \"black\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), \" \", eventData.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: 500,\n                color: \"black\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Event Details:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), \" \", eventData.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(MuiButton, {\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(EventInvitation, \"khGmidc9oFQBcGsuh5l6WiG5O3k=\");\n_c = EventInvitation;\nvar _c;\n$RefreshReg$(_c, \"EventInvitation\");","map":{"version":3,"names":["React","Box","Grid","Stack","TextField","MenuItem","Container","Typography","Dialog","DialogTitle","DialogContent","DialogActions","Button","MuiButton","Card","CardContent","Autocomplete","useEffect","useState","jsxDEV","_jsxDEV","eventTypeOptions","value","eventBackgrounds","Birthday","Wedding","EventInvitation","selectedEventType","setSelectedEventType","_s","eventData","setEventData","guestName","guestEmail","phone","eventType","eventDate","time","description","guestList","setGuestList","openDialog","setOpenDialog","prev","fetchGuests","res","fetch","data","json","err","console","error","handleChange","e","target","name","handleGenerate","response","method","headers","body","JSON","stringify","email","ok","alert","handleClose","maxWidth","sx","py","children","variant","textAlign","mb","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","justifyContent","item","xs","md","freeSolo","options","getOptionLabel","option","onChange","newValue","onInputChange","event","newInputValue","renderInput","params","label","fullWidth","select","map","type","InputLabelProps","shrink","multiline","rows","color","onClick","open","onClose","minWidth","backgroundImage","backgroundSize","backgroundPosition","borderRadius","boxShadow","padding","backdropFilter","opacity","position","zIndex","fontWeight","fontStyle","_c","$RefreshReg$"],"sources":["/home/vismaya/EventVite/eventvite-frontend/src/Components/EventInvitation.js"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Box,\n  Grid,\n  Stack,\n  TextField,\n  MenuItem,\n  Container,\n  Typography,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button as MuiButton,\n  Card,\n  CardContent,\n  Autocomplete,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\n// Event type options and background mappings\nconst eventTypeOptions = [\n  { value: \"Birthday\" },\n  { value: \"Wedding\" },\n  { value: \"House Warming\" },\n  { value: \"Baby Shower\" },\n];\n\nconst eventBackgrounds = {\n  Birthday: \"https://images.greetingsisland.com/images/envelopes/preview/p-envelope81-b.png\",\n  Wedding: \"https://www.pngmart.com/files/6/Hand-drawn-Wedding-Invitation-Background-PNG.png\",\n  \"House Warming\": \"https://img.freepik.com/free-vector/housewarming-celebration-card-template_23-2148955947.jpg\",\n  \"Baby Shower\": \"https://img.freepik.com/free-vector/flat-baby-shower-background_23-2148947601.jpg\",\n};\n\nexport default function EventInvitation({ selectedEventType, setSelectedEventType }) {\n  const [eventData, setEventData] = useState({\n    guestName: \"\",\n    guestEmail: \"\",\n    phone: \"\",\n    eventType: selectedEventType || \"\",  // Initialize with the selectedEventType prop\n    eventDate: \"\",\n    time: \"\",\n    description: \"\",\n  });\n\n  const [guestList, setGuestList] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n\n  // Sync eventType with prop selectedEventType whenever it changes\n  useEffect(() => {\n    if (selectedEventType) {\n      setEventData((prev) => ({\n        ...prev,\n        eventType: selectedEventType,\n      }));\n    }\n  }, [selectedEventType]);\n\n  // Fetch guests for Autocomplete\n  useEffect(() => {\n    const fetchGuests = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/api/guests\");\n        const data = await res.json();\n        setGuestList(data);\n      } catch (err) {\n        console.error(\"Failed to fetch guests:\", err);\n      }\n    };\n    fetchGuests();\n  }, []);\n\n  // Handle input changes\n  const handleChange = (e) => {\n    setEventData({ ...eventData, [e.target.name]: e.target.value });\n  };\n\n  // Handle generating the invitation and saving details\n  const handleGenerate = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/guests\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: eventData.guestName,\n          email: eventData.guestEmail,\n          phone: eventData.phone,\n          eventType: eventData.eventType,\n          eventDate: eventData.eventDate,\n          time: eventData.time,\n          description: eventData.description,\n        }),\n      });\n\n      const data = await response.json();\n      if (!response.ok) {\n        alert(\"Backend error: \" + data.error || \"Unknown error\");\n        return;\n      }\n\n      setOpenDialog(true);\n    } catch (err) {\n      console.error(\"Error during fetch:\", err);\n      alert(\"Failed to save guest details\");\n    }\n  };\n\n  // Handle closing the dialog\n  const handleClose = () => setOpenDialog(false);\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 5 }}>\n      <Typography variant=\"h4\" textAlign=\"center\" mb={4}>\n        Event Invitation\n      </Typography>\n\n      <Grid container spacing={4} justifyContent=\"center\">\n        {/* Guest Details */}\n        <Grid item xs={12} md={5}>\n          <Stack spacing={2}>\n            <Typography variant=\"h6\">Guest Details</Typography>\n\n            <Autocomplete\n              freeSolo\n              options={guestList}\n              getOptionLabel={(option) =>\n                typeof option === \"string\" ? option : option.name\n              }\n              value={eventData.guestName}\n              onChange={(e, newValue) => {\n                if (typeof newValue === \"string\") {\n                  setEventData({\n                    ...eventData,\n                    guestName: newValue,\n                    guestEmail: \"\",\n                    phone: \"\",\n                  });\n                } else if (newValue) {\n                  setEventData({\n                    ...eventData,\n                    guestName: newValue.name,\n                    guestEmail: newValue.email,\n                    phone: newValue.phone,\n                  });\n                } else {\n                  setEventData({\n                    ...eventData,\n                    guestName: \"\",\n                    guestEmail: \"\",\n                    phone: \"\",\n                  });\n                }\n              }}\n              onInputChange={(event, newInputValue) => {\n                setEventData((prev) => ({ ...prev, guestName: newInputValue }));\n              }}\n              renderInput={(params) => (\n                <TextField {...params} label=\"Guest Name\" fullWidth />\n              )}\n            />\n\n            <TextField\n              label=\"Guest Email\"\n              name=\"guestEmail\"\n              value={eventData.guestEmail}\n              onChange={handleChange}\n              fullWidth\n            />\n            <TextField\n              label=\"Phone\"\n              name=\"phone\"\n              value={eventData.phone}\n              onChange={handleChange}\n              fullWidth\n            />\n          </Stack>\n        </Grid>\n\n        {/* Event Details */}\n        <Grid item xs={12} md={5}>\n          <Stack spacing={2}>\n            <Typography variant=\"h6\">Event Details</Typography>\n\n            <TextField\n              select\n              label=\"Event Type\"\n              name=\"eventType\"\n              value={eventData.eventType}\n              onChange={(e) => {\n                setEventData({ ...eventData, eventType: e.target.value });\n                setSelectedEventType(e.target.value);  // Update the selected event type on change\n              }}\n              fullWidth\n            >\n              {eventTypeOptions.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.value}\n                </MenuItem>\n              ))}\n            </TextField>\n\n            <TextField\n              label=\"Event Date\"\n              name=\"eventDate\"\n              type=\"date\"\n              InputLabelProps={{ shrink: true }}\n              value={eventData.eventDate}\n              onChange={handleChange}\n              fullWidth\n            />\n            <TextField\n              label=\"Time\"\n              name=\"time\"\n              value={eventData.time}\n              onChange={handleChange}\n              fullWidth\n            />\n            <TextField\n              label=\"Event Description\"\n              name=\"description\"\n              multiline\n              rows={5}\n              value={eventData.description}\n              onChange={handleChange}\n              fullWidth\n            />\n          </Stack>\n        </Grid>\n\n        <Grid item xs={12} textAlign=\"center\">\n          <MuiButton variant=\"contained\" color=\"primary\" onClick={handleGenerate}>\n            Generate Invitation\n          </MuiButton>\n        </Grid>\n      </Grid>\n\n      {/* Invitation Card Dialog */}\n      <Dialog open={openDialog} onClose={handleClose}>\n        <DialogTitle>Invitation Card</DialogTitle>\n        <DialogContent>\n          <Card\n            sx={{\n              minWidth: 300,\n              backgroundImage: `url('${eventBackgrounds[eventData.eventType]}')`,\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\",\n              borderRadius: 5,\n              boxShadow: 10,\n              padding: 4,\n              textAlign: \"center\",\n              color: \"#fff\",\n              backdropFilter: \"blur(3px)\",\n              opacity: 0.95,\n            }}\n          >\n            <CardContent sx={{ position: \"relative\", zIndex: 2 }}>\n              <Typography variant=\"h4\" sx={{ fontWeight: 700, mb: 2, color: \"#800080\" }}>\n                {eventData.eventType} Invitation\n              </Typography>\n              <Typography variant=\"h5\" sx={{ fontStyle: \"italic\", mb: 2, color: \"black\" }}>\n                You're invited, {eventData.guestName}!\n              </Typography>\n              <Typography variant=\"body1\" sx={{ fontWeight: 500, mb: 1, color: \"black\" }}>\n                <strong>Date:</strong> {eventData.eventDate}\n              </Typography>\n              <Typography variant=\"body1\" sx={{ fontWeight: 500, mb: 1, color: \"black\" }}>\n                <strong>Time:</strong> {eventData.time}\n              </Typography>\n              <Typography variant=\"body1\" sx={{ fontWeight: 500, color: \"black\" }}>\n                <strong>Event Details:</strong> {eventData.description}\n              </Typography>\n            </CardContent>\n          </Card>\n        </DialogContent>\n        <DialogActions>\n          <MuiButton onClick={handleClose}>Close</MuiButton>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}